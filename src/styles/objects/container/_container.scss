@use "sass:map";
@use "@/styles/tools/generators/default" as default;
@use "@/styles/tools/units" as units;
@use "@/styles/tools/sizes" as sizes;
@use "@/styles/settings/core" as core;
@use "./settings" as settings;

$_class-separator: core.$class-separator;

[class*="o-container"] {
	--container-width: unset;
	--container-max-width: unset;
	--container-margin-right: unset;
	--container-margin-left: unset;
	--container-padding-right: unset;
	--container-padding-left: unset;

	width: var(--container-width);
	max-width: var(--container-max-width);
	margin-right: var(--container-margin-right);
	margin-left: var(--container-margin-left);
	padding-right: var(--container-padding-right);
	padding-left: var(--container-padding-left);
}

[class*="o-container-l"],
[class*="o-container-r"] {
	--container-max-width-value: unset;
	--container-max-width: calc(var(--container-max-width-value) + ((100% - var(--container-max-width-value)) * 0.5));
}

@each $name, $settings in settings.$containers {
	$suffix: if($name == "default", "", #{$_class-separator}#{$name});
	$max-width: units.convert(map.get($settings, max-width));
	$container: map.get($settings, container);
	$container-l: map.get($settings, container-l);
	$container-r: map.get($settings, container-r);

	@if ($container) {
		.o-container#{$suffix} {
			@include default.generate($container) {
				--container-width: 100%;
				--container-max-width: #{$max-width};
				--container-margin-right: auto;
				--container-margin-left: auto;
			}

			@include default.generate($container, settings.$spacing) using ($item) {
				--container-padding-right: #{sizes.scale($item)};
				--container-padding-left: #{sizes.scale($item)};
			}
		}
	}

	@if ($container-l) {
		.o-container-l#{$suffix} {
			@include default.generate($container-l) {
				--container-width: 100%;
				--container-max-width-value: #{$max-width};
				--container-margin-left: auto;
			}

			@include default.generate($container-l, settings.$spacing) using ($item) {
				--container-padding-left: #{sizes.scale($item)};
			}
		}
	}

	@if ($container-r) {
		.o-container-r#{$suffix} {
			@include default.generate($container-r) {
				--container-width: 100%;
				--container-max-width-value: #{$max-width};
				--container-margin-right: auto;
			}

			@include default.generate($container-r, settings.$spacing) using ($item) {
				--container-padding-right: #{sizes.scale($item)};
			}
		}
	}
}
