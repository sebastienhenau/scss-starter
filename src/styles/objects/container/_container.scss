@use "sass:map";
@use "@/styles/tools/generators/default" as default;
@use "@/styles/tools/units" as units;
@use "@/styles/tools/sizes" as sizes;
@use "./settings" as settings;

$_max-width: units.convert(settings.$max-width);

[class*="o-container"] {
	--container-width: unset;
	--container-max-width: unset;
	--container-margin-right: unset;
	--container-margin-left: unset;
	--container-padding-right: unset;
	--container-padding-left: unset;

	width: var(--container-width);
	max-width: var(--container-max-width);
	margin-right: var(--container-margin-right);
	margin-left: var(--container-margin-left);
	padding-right: var(--container-padding-right);
	padding-left: var(--container-padding-left);
}

[class*="o-container-l"],
[class*="o-container-r"],
[class*="o-container-width-l"],
[class*="o-container-width-r"] {
	--container-max-width-value: unset;
	--container-max-width: calc(var(--container-max-width-value) + ((100% - var(--container-max-width-value)) * 0.5));
}

[class*="o-container-inset"] {
	--container-max-width-value: unset;
	--container-padding: max(
		calc((100% - var(--container-max-width-value)) * 0.5 + var(--container-padding-value)),
		var(--container-padding-value)
	);
	--container-padding-right: var(--container-padding);
	--container-padding-left: var(--container-padding);
}

[class*="o-container-inset-width"] {
	--container-padding: calc((100% - var(--container-max-width-value)) * 0.5);
}

.o-container-max-width {
	@include default.generate(settings.$container-max-width) {
		--container-width: 100%;
		--container-max-width: #{$_max-width};
		--container-margin-left: auto;
		--container-margin-right: auto;
	}
}

.o-container-space {
	@include default.generate(settings.$container-space, settings.$spacing) using ($item) {
		--container-padding-right: #{sizes.scale($item)};
		--container-padding-left: #{sizes.scale($item)};
	}
}

.o-container-space-l {
	@include default.generate(settings.$container-space-l, settings.$spacing) using ($item) {
		--container-padding-left: #{sizes.scale($item)};
	}
}

.o-container-space-r {
	@include default.generate(settings.$container-space-r, settings.$spacing) using ($item) {
		--container-padding-right: #{sizes.scale($item)};
	}
}

.o-container {
	@include default.generate(settings.$container) {
		--container-width: 100%;
		--container-max-width: #{$_max-width};
		--container-margin-right: auto;
		--container-margin-left: auto;
	}

	@include default.generate(settings.$container, settings.$spacing) using ($item) {
		--container-padding-right: #{sizes.scale($item)};
		--container-padding-left: #{sizes.scale($item)};
	}
}

.o-container-l {
	@include default.generate(settings.$container-l) {
		--container-width: 100%;
		--container-max-width-value: #{$_max-width};
		--container-margin-left: auto;
	}

	@include default.generate(settings.$container-l, settings.$spacing) using ($item) {
		--container-padding-left: #{sizes.scale($item)};
	}
}

.o-container-r {
	@include default.generate(settings.$container-r) {
		--container-width: 100%;
		--container-max-width-value: #{$_max-width};
		--container-margin-right: auto;
	}

	@include default.generate(settings.$container-r, settings.$spacing) using ($item) {
		--container-padding-right: #{sizes.scale($item)};
	}
}

.o-container-width {
	@include default.generate(settings.$container-width) {
		--container-width: 100%;
		--container-max-width: #{$_max-width};
		--container-margin-right: auto;
		--container-margin-left: auto;
	}
}

.o-container-width-l {
	@include default.generate(settings.$container-width-l) {
		--container-width: 100%;
		--container-max-width-value: #{$_max-width};
		--container-margin-left: auto;
	}
}

.o-container-width-r {
	@include default.generate(settings.$container-width-r) {
		--container-width: 100%;
		--container-max-width-offset-value: #{$_max-width};
		--container-margin-right: auto;
	}
}

.o-container-inset {
	@include default.generate(settings.$container-inset, settings.$spacing) using ($item) {
		--container-padding-value: #{sizes.scale($item)};
	}
}

.o-container-inset-l {
	@include default.generate(settings.$container-inset-l, settings.$spacing) using ($item) {
		--container-padding-value: #{sizes.scale($item)};
		--container-padding-right: unset;
	}
}

.o-container-inset-r {
	@include default.generate(settings.$container-inset-l, settings.$spacing) using ($item) {
		--container-padding-value: #{sizes.scale($item)};
		--container-padding-left: unset;
	}
}

.o-container-inset-width {
	@include default.generate(settings.$container-inset-width) {
		--container-max-width-value: #{$_max-width};
	}
}

.o-container-inset-width-l {
	@include default.generate(settings.$container-inset-width) {
		--container-max-width-value: #{$_max-width};
		--container-padding-right: unset;
	}
}

.o-container-inset-width-r {
	@include default.generate(settings.$container-inset-width) {
		--container-max-width-value: #{$_max-width};
		--container-padding-left: unset;
	}
}
