@use "sass:meta";
@use "sass:math";
@use "../settings" as settings;
@use "./rem" as *;

$_space-key: space;
$_type-key: type;

@function _linear($scale, $value) {
	$result: $scale * $value;

	@return rem($result);
}

@function _modular($scale, $value) {
	$result: settings.$base-font-size;

	@if ($value > 0) {
		@for $i from 1 through $value {
			$result: $result * $scale;
		}
	} @else if ($value < 0) {
		@for $i from 1 through math.abs($value) {
			$result: $result / $scale;
		}
	}

	@return rem($result);
}

@function _get-linear($type) {
	@if (meta.global-variable-exists(linear, settings)) {
		@return settings.$linear;
	} @else {
		@if ($type == $_space-key) {
			@return settings.$space-linear;
		} @else if ($type == $_type-key) {
			@return settings.$type-linear;
		}
	}
}

@function _get-scale($type) {
	@if (meta.global-variable-exists(scale, settings)) {
		@return settings.$scale;
	} @else {
		@if ($type == $_space-key) {
			@return settings.$space-scale;
		} @else if ($type == $_type-key) {
			@return settings.$type-scale;
		}
	}
}

@function scale($value, $type: $_space-key) {
	$linear: _get-linear($type);
	$scale: _get-scale($type);

	@if ($linear) {
		@return _linear($scale, $value);
	} @else {
		@return _modular($scale, $value);
	}
}
